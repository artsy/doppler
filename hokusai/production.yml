apiVersion: apps/v1
kind: Deployment
metadata:
  name: doppler-web
  namespace: default
  labels:
    app: doppler
    component: web
    layer: application
    app.kubernetes.io/version: production
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: doppler
      component: web
      layer: application
  template:
    metadata:
      labels:
        app: doppler
        component: web
        layer: application
        app.kubernetes.io/version: production
      name: doppler-web
    spec:
      initContainers:
      - name: setenv
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/fortress:production
        imagePullPolicy: Always
        args:
        - python
        - src/load/load.py
        - kubernetes
        - production
        - doppler
        envFrom:
        - configMapRef:
          name: secrets-config
        volumeMounts:
        - name: secrets
          mountPath: /secrets
      containers:
      - name: doppler-web
        env:
        - name: TRACE_AGENT_HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DD_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['app.kubernetes.io/version']
        envFrom:
        - configMapRef: 
          name: secrets-config
        - configMapRef:
          name: doppler-environment
        volumeMounts:
        - name: secrets
          mountPath: /secrets
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/doppler:production
        imagePullPolicy: Always
        ports:
        - name: doppler-http
          containerPort: 8080
        resources:
          requests:
            cpu: 200m
            memory: 800Mi
          limits:
            memory: 1Gi
        readinessProbe:
          httpGet:
            port: doppler-http
            path: /health/ping
            httpHeaders:
              - name: X-Forwarded-Proto
                value: https
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: '1'
      serviceAccountName: doppler
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground
      volumes:
      - name: secrets
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: doppler
    component: web
    layer: application
  name: doppler-web-internal
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
    targetPort: 8080
  selector:
    app: doppler
    layer: application
    component: web
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: doppler
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: {{ cloudflareIpSourceRanges|join(',') }}
spec:
  ingressClassName: nginx
  rules:
  - host: developers.artsy.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: doppler-web-internal
            port:
              name: http
